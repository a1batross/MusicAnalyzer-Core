#include "main.h"
#include <essentia.h>
#include "extractor_music/MusicExtractor.h"
#include "credit_libav.h"

using namespace std;

void usage(char *progname) {
	cout << "Error: wrong number of arguments" << endl;
	cout << "Usage: " << progname << " <analyze|classify> input_descriptorfile output_textfile [profile]" << endl;
	cout << endl <<
			"This extractor generates semantic annotation of music in terms of genres, mood,\n"
			"type of rhythm, and instrumentation qualities, using a set of pretrained SVM\n"
			"classifiers. It expects a json/yaml file generated by 'streaming_extractor_music'\n"
			"extractor as its input" << endl;
	cout << endl << "Music extractor version '" << EXTRACTOR_VERSION << "'" << endl
		 << "built with Essentia version " << essentia::version_git_sha << endl;
	creditLibAV();
	// creditEssentia();
	exit(1);
}

int main(int argc, char* argv[])
{
	std::string input, output, profile;
	bool analyzeMode;

	essentia::init();

	if( argc < 1 )
		usage( argv[0] );

	if( !strcmp( argv[1], "analyze") )
	{
		if( argc < 4 )
			usage( argv[0] );

		input = argv[2];
		output = argv[3];
		if( argc > 4 )
			profile = argv[4];
		else profile = "";

		analyzeMode = true;
	}
	else if( !strcmp( argv[1], "classify" ))
	{
		if( argc < 5 )
			usage( argv[0] );

		input = argv[2];
		output = argv[3];
		profile = argv[4];

		analyzeMode = false;
	}
	else
	{
		usage( argv[0] );
	}

	if( analyzeMode )
		ma::analyzeToFile( input, profile, output );
	else ma::classifyToFile( input, profile, output );

	essentia::shutdown();
}
